---
import IconChevronRight from '@/assets/icons/IconChevronRight.svg';
import type { Question } from '@/types/question';

interface Props {
  question: Question;
}

const { question } = Astro.props as Props;
---

<div class="question-item group cursor-pointer rounded-lg bg-beige1 p-4 select-none">
  <div class="flex items-center justify-between gap-2">
    <p class="text-lg font-medium text-gray-800 transition-colors group-hover:text-midnight">
      {question.question}
    </p>
    <IconChevronRight
      class="icon-chevron h-4 w-4 flex-shrink-0 transition-transform duration-300 ease-out"
    />
  </div>

  <div class="answer grid grid-rows-[0fr] transition-[grid-template-rows] duration-300 ease-in-out">
    <div class="overflow-hidden">
      <p class="mt-2 text-base text-gray-600">
        {question.answer}
      </p>
    </div>
  </div>
</div>

<script>
  document.querySelectorAll('.question-item').forEach((item) => {
    const icon = item.querySelector('.icon-chevron') as SVGElement;
    const answer = item.querySelector('.answer') as HTMLDivElement;
    let isOpen = false;

    item.addEventListener('click', () => {
      isOpen = !isOpen;

      if (icon) {
        icon.style.transform = isOpen ? 'rotate(90deg)' : 'rotate(0deg)';
      }

      if (answer) {
        answer.style.gridTemplateRows = isOpen ? '1fr' : '0fr';
      }
    });
  });
</script>
